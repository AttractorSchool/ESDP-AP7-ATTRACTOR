# Generated by Django 4.1.4 on 2022-12-28 06:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100, null=True, verbose_name='Город')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(max_length=100, null=True, verbose_name='Город')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
        ),
        migrations.CreateModel(
            name='EducationTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education_time', models.CharField(max_length=100, null=True, verbose_name='Время для обучения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
        ),
        migrations.CreateModel(
            name='OnlinePlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('online_platform', models.CharField(max_length=100, null=True, verbose_name='Онлайн платформа')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program', models.CharField(max_length=100, null=True, verbose_name='Программа обучения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=100, null=True, verbose_name='Область')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
        ),
        migrations.CreateModel(
            name='StudentRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_regions', to='cabinet_parents.city', verbose_name='Город')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_regions', to='cabinet_parents.district', verbose_name='Район')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_regions', to='cabinet_parents.region', verbose_name='Область')),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=100, null=True, verbose_name='Предмет')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100, null=True, verbose_name='Тест')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
            ],
        ),
        migrations.CreateModel(
            name='TutorRegion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutor_regions', to='cabinet_parents.city', verbose_name='Город')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutor_regions', to='cabinet_parents.district', verbose_name='Район')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tutor_regions', to='cabinet_parents.region', verbose_name='Область')),
            ],
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_cost', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(500), django.core.validators.MaxValueValidator(29900)], verbose_name='Минимальная стоимость')),
                ('max_cost', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(600), django.core.validators.MaxValueValidator(30000)], verbose_name='Максимальная стоимость')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активный')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Удалено')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('education_time', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surveys', to='cabinet_parents.educationtime', verbose_name='Время для обучения')),
                ('online', models.ManyToManyField(related_name='surveys', to='cabinet_parents.onlineplatform', verbose_name='Онлайн платформы')),
                ('programs', models.ManyToManyField(related_name='surveys', to='cabinet_parents.program', verbose_name='Программа обучения')),
                ('student_region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surveys', to='cabinet_parents.studentregion', verbose_name='Район занятий у ученика')),
                ('subjects', models.ManyToManyField(related_name='surveys', to='cabinet_parents.subject', verbose_name='Предметы')),
                ('tutor_region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='surveys', to='cabinet_parents.tutorregion', verbose_name='Район занятий у репетитора')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='survey', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
    ]
